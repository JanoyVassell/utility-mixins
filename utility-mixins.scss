/////////////////////////////////////////////////////////////////////////////////////////////
// Aim: Create a set of mixins that can be used as a Swiss Army knife for all projects
// Author: Janoy Vassell
// Website: www.janoyvassell.com
// Version: 0.2
// License: MIT License
/////////////////////////////////////////////////////////////////////////////////////////////

//Used to calculate the REM equivalent of the argument passed
@function calculateRem($input)
{
    $input--rem: ($input / $font-size--medium) * 1rem;
    @return $input--rem;
}


// Calculates the REM value for a font, if browser doesn't support REM fallback of pixels
// will be used hence font-size:$input

@mixin font-size($input)
{
    font-size: $input;
    font-size: calculateRem($input);
}

//Clearfix Mixins
@mixin clearfix
{
    content: '';
    display: table;
}
@mixin clearfix-after
{
    clear: both;
}

//Centers the content of an element (width has to be specified for the element)
@mixin centre-block
{
    margin: 0 auto;
    display: block;
}

//Padding Mixins
@mixin padding-left($input)
{
    padding-left: $input;
    padding-left: calculateRem($input);
}
@mixin padding-right($input)
{
    padding-right: $input;
    padding-right: calculateRem($input);
}
@mixin padding-top($input)
{
    padding-top: $input;
    padding-top: calculateRem($input);
}
@mixin padding-bottom($input)
{
    padding-bottom: $input;
    padding-bottom: calculateRem($input);
}
@mixin padding($top, $right:null, $bottom:null, $left:null)
{
    padding: $top $right $bottom $left;
    @if $right == null and $bottom == null and $left == null
    {
        padding: calculateRem($top);
    }
    @else if $bottom == null and $left == null
    {
        padding: calculateRem($top) calculateRem($right);
    }
    @else if $left == null
    {
        padding: calculateRem($top) calculateRem($right) calculateRem($bottom);
    }
    @else
    {
        padding: calculateRem($top) calculateRem($right) calculateRem($bottom) calculateRem($left);
    }
}

//Margin Mixins
@mixin margin-left($input)
{
    margin-left: $input;
    margin-left: calculateRem($input);
}
@mixin margin-right($input)
{
    margin-right: $input;
    margin-right: calculateRem($input);
}
@mixin margin-top($input)
{
    margin-top: $input;
    margin-top: calculateRem($input);
}
@mixin margin-bottom($input)
{
    margin-bottom: $input;
    margin-bottom: calculateRem($input);
}
@mixin margin($top, $right:null, $bottom:null, $left:null)
{
    margin: $top $right $bottom $left;
    @if $right == null and $bottom == null and $left == null
    {
        margin: calculateRem($top);
    }
    @else if $bottom == null and $left == null
    {
        margin: calculateRem($top) calculateRem($right);
    }
    @else if $left == null
    {
        margin: calculateRem($top) calculateRem($right) calculateRem($bottom);
    }
    @else
    {
        margin: calculateRem($top) calculateRem($right) calculateRem($bottom) calculateRem($left);
    }
}
